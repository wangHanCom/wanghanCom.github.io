(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{369:function(_,e,t){"use strict";t.r(e);var v=t(42),r=Object(v.a)({},(function(){var _=this,e=_.$createElement,t=_._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"tcp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp"}},[_._v("#")]),_._v(" TCP")]),_._v(" "),t("h2",{attrs:{id:"tcp-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tcp-2"}},[_._v("#")]),_._v(" TCP")]),_._v(" "),t("ul",[t("li",[_._v("面向连接")]),_._v(" "),t("li",[_._v("一对一通信")]),_._v(" "),t("li",[_._v("面向字节流")]),_._v(" "),t("li",[_._v("可靠传输，使用流量控制和拥塞控制")]),_._v(" "),t("li",[_._v("报头最小20字节，最大60字节")])]),_._v(" "),t("h2",{attrs:{id:"udp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#udp"}},[_._v("#")]),_._v(" UDP")]),_._v(" "),t("p",[_._v("无连接\n支持一对一，一对多，多对一和多对多的通信\n面向报文\n不可靠传输，不使用流量控制和拥塞控制\n报头开销小，仅8字节")]),_._v(" "),t("h2",{attrs:{id:"三次握手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[_._v("#")]),_._v(" 三次握手")]),_._v(" "),t("p",[_._v("tcp连接是全双工的，数据在两个方向上能同时传递。\n所以要确保双方，同时能发数据和收数据")]),_._v(" "),t("ul",[t("li",[_._v("第一次握手：建立连接。客户端发送连接请求报文段，将SYN位置为1，Sequence Number为x；然后，客户端进入SYN_SEND状态，等待服务器的确认；（客户端发送网络包，服务端收到了，服务端能得出结论：==客户端的发送能力、服务端的接收能力是正常的==。）")]),_._v(" "),t("li",[_._v("第二次握手：服务器收到SYN报文段。服务器收到客户端的SYN报文段，需要对这个SYN报文段进行确认，设置Acknowledgment Number为x+1(Sequence Number+1)；同时，自己自己还要发送SYN请求信息，将SYN位置为1，Sequence Number为y；服务器端将上述所有信息放到一个报文段（即SYN+ACK报文段）中，一并发送给客户端，此时服务器进入SYN_RECV状态；（服务端发包，客户端收到了。客户端得出结论：==服务端的接收、发送能力，客户端的接收、发送能力是正常的==）")]),_._v(" "),t("li",[_._v("第三次握手：客户端收到服务器的SYN+ACK报文段。然后将Acknowledgment Number设置为y+1，向服务器发送ACK报文段，这个报文段发送完毕以后，客户端和服务器端都进入ESTABLISHED状态，完成TCP三次握手。（客户端发包，服务端收到了。服务端就能得出结论：==客户端的接收、发送能力，服务端的发送、接收能力是正常的。==）")]),_._v(" "),t("li",[_._v("完成了三次握手，客户端和服务器端就可以开始传送数据。以上就是TCP三次握手的总体介绍。")])]),_._v(" "),t("p",[_._v("总结如下：")]),_._v(" "),t("ol",[t("li",[_._v("客户端发送SYN，表明要向服务器建立连接。同时带上序列号ISN")]),_._v(" "),t("li",[_._v("服务器返回ACK（序号为客户端序列号+1）作为确认。同时发送SYN作为应答（SYN的序列号为服务端唯一的序号）")]),_._v(" "),t("li",[_._v("客户端发送ACK确认收到回复（序列号为服务端序列号+1）")])]),_._v(" "),t("p",[_._v("为什么需要三次握手，两次可以吗？")]),_._v(" "),t("ul",[t("li",[_._v("如果是两次握手，在第二次握手出现确认报文丢失，客户端不知道服务端是否准备好了，这种情况下客户端不会给服务端发数据，也会忽略服务端发过来的数据。")]),_._v(" "),t("li",[_._v("如果是三次握手，在第三次握手出现确认报文丢失，服务端在一段时间没有收到客户端的回复报文就会重新第二次握手，客户端收到重复的报文会再次给服务端发送确认报文。")]),_._v(" "),t("li",[_._v("==三次握手主要考虑是丢包重连的问题。==")])]),_._v(" "),t("h2",{attrs:{id:"四次挥手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[_._v("#")]),_._v(" 四次挥手")]),_._v(" "),t("ul",[t("li",[_._v("第一次分手：主机1，设置Sequence Number和Acknowledgment Number，==向主机2发送一个FIN报文==段；此时，主机1进入FIN_WAIT_1状态；这表示主机1没有数据要发送给主机2了；（ ==主动关闭的一方发送FIN==，表示要单方面关闭数据的传输）")]),_._v(" "),t("li",[_._v("第二次分手：==主机2收到了主机1发送的FIN报文段==，==向主机1回一个ACK==报文段，Acknowledgment Number为Sequence Number加1；主机1进入FIN_WAIT_2状态；主机2告诉主机1，我“同意”你的关闭请求；（ ==服务端==收到FIN后，发送一个ACK作为确认）")]),_._v(" "),t("li",[_._v("第三次分手：==主机2向主机1发送FIN报文段==，请求关闭连接，同时主机2进入LAST_ACK状态；主机2将最后的数据发送完毕后，给主机1回复确认报文（带有FIN标识），这个才是通知主机1可以释放连接的报文；")]),_._v(" "),t("li",[_._v("第四次分手：==主机1收到主机2发送的FIN==报文段，==向主机2发送ACK==报文段，然后主机1进入TIME_WAIT状态；主机2收到主机1的ACK报文段以后，就关闭连接；此时，主机1等待2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，主机1也可以关闭连接了。（==回复ACK以确认回复==）主机1收到主机2回复确认报文后，于是主机1回复确认报文给主机2。而主机2一旦收到主机1发出的确认报文就会立马释放TCP连接，所以主机2结束TCP连接的时间要比主机1早一些。")])]),_._v(" "),t("p",[_._v("为什么握手需要三次，而挥手需要四次")]),_._v(" "),t("ul",[t("li",[_._v("服务端需要确保数据完整性，只能先回复客户端确认报文告诉客户端我收到了报文，进入关闭等待状态。服务端在数据发送完毕后，才回复FIN报文告知客户端数据发送完了，可以断开了，由此多了一次挥手过程。")])]),_._v(" "),t("h2",{attrs:{id:"标识说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#标识说明"}},[_._v("#")]),_._v(" 标识说明")]),_._v(" "),t("ul",[t("li",[_._v("URG：为1时，表示紧急指针有效")]),_._v(" "),t("li",[_._v("ACK：确认标识，连接建立成功后，总为1。为1时确认号有效")]),_._v(" "),t("li",[_._v("PSH：接收方应尽快把这个报文交给应用层")]),_._v(" "),t("li",[_._v("RST：复位标识，重建连接")]),_._v(" "),t("li",[_._v("SYN：建立新连接时，该位为0")]),_._v(" "),t("li",[_._v("FIN：关闭连接标识")])]),_._v(" "),t("p",[_._v("参考链接")]),_._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.im/post/6844903685563105293",target:"_blank",rel:"noopener noreferrer"}},[_._v("TCP协议详解"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("a",{attrs:{href:"https://github.com/jawil/blog/issues/14",target:"_blank",rel:"noopener noreferrer"}},[_._v("通俗大白话来理解TCP协议的三次握手和四次分手"),t("OutboundLink")],1)]),_._v(" "),t("li",[t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.im/post/6869376045636648973?utm_source=gold_browser_extension",target:"_blank",rel:"noopener noreferrer"}},[_._v("金九银十，初中级前端面试复习总结「浏览器、HTTP、前端安全」"),t("OutboundLink")],1)])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);